services:
  postgres:
    container_name: task-service-postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: task-service
      POSTGRES_USER: task-service
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./db_migrations:/docker-entrypoint-initdb.d
      - task-service-postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U task-service -d task-service
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - task-service
  server:
    container_name: task-service-app
    build:
      context: .
      dockerfile: dockerfile
    environment:
      POSTGRES_NAME: task-service
      POSTGRES_HOST: task-service-postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
      POSTGRES_USER: task-service
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "443:443"
      - "80:80"
    networks:
      - task-service
  detection_model_1:
    container_name: detection-model-service
    build:
      context: ../detection_model_service
      dockerfile: ../detection_model_service/dockerfile
    networks:
      - task-service

volumes:
  task-service-postgres-db:

networks:
  task-service:
    driver: bridge